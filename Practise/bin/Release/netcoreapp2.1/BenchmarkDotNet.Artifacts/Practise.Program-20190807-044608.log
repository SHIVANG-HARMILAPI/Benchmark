// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 2 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet restore  /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in C:\Users\shharmilapi\source\repos\Practise\Practise\bin\Release\netcoreapp2.1\f6e3ef77-5881-4596-9d7c-758d681788f7
// command took 4.15s and exited with 0
// start dotnet build -c Release  --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in C:\Users\shharmilapi\source\repos\Practise\Practise\bin\Release\netcoreapp2.1\f6e3ef77-5881-4596-9d7c-758d681788f7
// command took 7.24s and exited with 0
// ***** Done, took 00:00:11 (11.64 sec)   *****
// Found 2 benchmarks:
//   Program.RunningCodeUsingForLoop: DefaultJob
//   Program.RunningCodeUsingForEachLoop: DefaultJob

Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)// **************************
// Benchmark: Program.RunningCodeUsingForLoop: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "f6e3ef77-5881-4596-9d7c-758d681788f7.dll" --benchmarkName "Practise.Program.RunningCodeUsingForLoop" --job "Default" --benchmarkId 0 in C:\Users\shharmilapi\source\repos\Practise\Practise\bin\Release\netcoreapp2.1\f6e3ef77-5881-4596-9d7c-758d681788f7\bin\Release\netcoreapp2.1
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.1.12 (CoreCLR 4.6.27817.01, CoreFX 4.6.27818.01), 64bit RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 551871.80 ns, 551.8718 us/op

System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index
   at Practise.Program.RunningCodeUsingForLoop() in C:\Users\shharmilapi\source\repos\Practise\Practise\Program.cs:line 36
   at BenchmarkDotNet.Autogenerated.Runnable_0.WorkloadActionNoUnroll(Int64 invokeCount) in C:\Users\shharmilapi\source\repos\Practise\Practise\bin\Release\netcoreapp2.1\f6e3ef77-5881-4596-9d7c-758d681788f7\f6e3ef77-5881-4596-9d7c-758d681788f7.notcs:line 747
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineFactory.Jit(Engine engine, Int32 jitIndex, Int32 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineFactory.CreateReadyToRun(EngineParameters engineParameters)
   at BenchmarkDotNet.Autogenerated.Runnable_0.Run(IHost host, String benchmarkName) in C:\Users\shharmilapi\source\repos\Practise\Practise\bin\Release\netcoreapp2.1\f6e3ef77-5881-4596-9d7c-758d681788f7\f6e3ef77-5881-4596-9d7c-758d681788f7.notcs:line 164
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in C:\Users\shharmilapi\source\repos\Practise\Practise\bin\Release\netcoreapp2.1\f6e3ef77-5881-4596-9d7c-758d681788f7\f6e3ef77-5881-4596-9d7c-758d681788f7.notcs:line 49
// AfterAll
ExitCode != 0
No more Benchmark runs will be launched as NO measurements were obtained from the previous run!


// **************************
// Benchmark: Program.RunningCodeUsingForEachLoop: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "f6e3ef77-5881-4596-9d7c-758d681788f7.dll" --benchmarkName "Practise.Program.RunningCodeUsingForEachLoop" --job "Default" --benchmarkId 1 in C:\Users\shharmilapi\source\repos\Practise\Practise\bin\Release\netcoreapp2.1\f6e3ef77-5881-4596-9d7c-758d681788f7\bin\Release\netcoreapp2.1
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.1.12 (CoreCLR 4.6.27817.01, CoreFX 4.6.27818.01), 64bit RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 526607.29 ns, 526.6073 us/op
WorkloadJitting  1: 1 op, 868073.03 ns, 868.0730 us/op

OverheadJitting  2: 16 op, 435023.41 ns, 27.1890 us/op
WorkloadJitting  2: 16 op, 558187.93 ns, 34.8867 us/op

WorkloadPilot    1: 16 op, 5526.61 ns, 345.4133 ns/op
WorkloadPilot    2: 32 op, 3947.58 ns, 123.3619 ns/op
WorkloadPilot    3: 64 op, 3552.82 ns, 55.5129 ns/op
WorkloadPilot    4: 128 op, 6316.13 ns, 49.3448 ns/op
WorkloadPilot    5: 256 op, 11053.23 ns, 43.1767 ns/op
WorkloadPilot    6: 512 op, 28027.82 ns, 54.7418 ns/op
WorkloadPilot    7: 1024 op, 44212.91 ns, 43.1767 ns/op
WorkloadPilot    8: 2048 op, 88425.81 ns, 43.1767 ns/op
WorkloadPilot    9: 4096 op, 206458.48 ns, 50.4049 ns/op
WorkloadPilot   10: 8192 op, 381336.31 ns, 46.5498 ns/op
WorkloadPilot   11: 16384 op, 852677.47 ns, 52.0433 ns/op
WorkloadPilot   12: 32768 op, 1898391.64 ns, 57.9343 ns/op
WorkloadPilot   13: 65536 op, 2991476.78 ns, 45.6463 ns/op
WorkloadPilot   14: 131072 op, 5414896.67 ns, 41.3124 ns/op
WorkloadPilot   15: 262144 op, 12738448.69 ns, 48.5933 ns/op
WorkloadPilot   16: 524288 op, 21423916.10 ns, 40.8629 ns/op
WorkloadPilot   17: 1048576 op, 41166557.52 ns, 39.2595 ns/op
WorkloadPilot   18: 2097152 op, 78783055.56 ns, 37.5667 ns/op
WorkloadPilot   19: 4194304 op, 157469395.39 ns, 37.5436 ns/op
WorkloadPilot   20: 8388608 op, 313767543.54 ns, 37.4040 ns/op
WorkloadPilot   21: 16777216 op, 634966802.82 ns, 37.8470 ns/op

OverheadWarmup   1: 16777216 op, 49904133.00 ns, 2.9745 ns/op
OverheadWarmup   2: 16777216 op, 51620146.40 ns, 3.0768 ns/op
OverheadWarmup   3: 16777216 op, 50927345.96 ns, 3.0355 ns/op
OverheadWarmup   4: 16777216 op, 52713231.54 ns, 3.1420 ns/op
OverheadWarmup   5: 16777216 op, 53190494.07 ns, 3.1704 ns/op
OverheadWarmup   6: 16777216 op, 49762414.85 ns, 2.9661 ns/op

OverheadActual   1: 16777216 op, 49950714.45 ns, 2.9773 ns/op
OverheadActual   2: 16777216 op, 49266598.69 ns, 2.9365 ns/op
OverheadActual   3: 16777216 op, 48967766.82 ns, 2.9187 ns/op
OverheadActual   4: 16777216 op, 48547744.21 ns, 2.8937 ns/op
OverheadActual   5: 16777216 op, 48489320.02 ns, 2.8902 ns/op
OverheadActual   6: 16777216 op, 48336943.40 ns, 2.8811 ns/op
OverheadActual   7: 16777216 op, 49664909.60 ns, 2.9603 ns/op
OverheadActual   8: 16777216 op, 48649591.80 ns, 2.8997 ns/op
OverheadActual   9: 16777216 op, 48248517.58 ns, 2.8758 ns/op
OverheadActual  10: 16777216 op, 48491688.57 ns, 2.8903 ns/op
OverheadActual  11: 16777216 op, 48353917.99 ns, 2.8821 ns/op
OverheadActual  12: 16777216 op, 49029349.08 ns, 2.9224 ns/op
OverheadActual  13: 16777216 op, 49213306.35 ns, 2.9333 ns/op
OverheadActual  14: 16777216 op, 48724595.84 ns, 2.9042 ns/op
OverheadActual  15: 16777216 op, 49583589.43 ns, 2.9554 ns/op

WorkloadWarmup   1: 16777216 op, 631001063.08 ns, 37.6106 ns/op
WorkloadWarmup   2: 16777216 op, 620361543.14 ns, 36.9764 ns/op
WorkloadWarmup   3: 16777216 op, 649969978.65 ns, 38.7412 ns/op
WorkloadWarmup   4: 16777216 op, 621870703.30 ns, 37.0664 ns/op
WorkloadWarmup   5: 16777216 op, 620659585.50 ns, 36.9942 ns/op
WorkloadWarmup   6: 16777216 op, 629022140.80 ns, 37.4926 ns/op
WorkloadWarmup   7: 16777216 op, 621115136.33 ns, 37.0213 ns/op

// BeforeActualRun
WorkloadActual   1: 16777216 op, 624288596.58 ns, 37.2105 ns/op
WorkloadActual   2: 16777216 op, 630065881.18 ns, 37.5549 ns/op
WorkloadActual   3: 16777216 op, 623302885.64 ns, 37.1517 ns/op
WorkloadActual   4: 16777216 op, 622590347.30 ns, 37.1093 ns/op
WorkloadActual   5: 16777216 op, 623521186.86 ns, 37.1648 ns/op
WorkloadActual   6: 16777216 op, 624635194.18 ns, 37.2312 ns/op
WorkloadActual   7: 16777216 op, 625519847.05 ns, 37.2839 ns/op
WorkloadActual   8: 16777216 op, 625174038.97 ns, 37.2633 ns/op
WorkloadActual   9: 16777216 op, 620781960.50 ns, 37.0015 ns/op
WorkloadActual  10: 16777216 op, 627859972.99 ns, 37.4234 ns/op
WorkloadActual  11: 16777216 op, 630181940.05 ns, 37.5618 ns/op
WorkloadActual  12: 16777216 op, 626374103.55 ns, 37.3348 ns/op
WorkloadActual  13: 16777216 op, 620905125.03 ns, 37.0088 ns/op
WorkloadActual  14: 16777216 op, 624184380.45 ns, 37.2043 ns/op
WorkloadActual  15: 16777216 op, 625188250.26 ns, 37.2641 ns/op

// AfterActualRun
WorkloadResult   1: 16777216 op, 575564000.75 ns, 34.3063 ns/op
WorkloadResult   2: 16777216 op, 581341285.34 ns, 34.6506 ns/op
WorkloadResult   3: 16777216 op, 574578289.81 ns, 34.2475 ns/op
WorkloadResult   4: 16777216 op, 573865751.46 ns, 34.2051 ns/op
WorkloadResult   5: 16777216 op, 574796591.03 ns, 34.2605 ns/op
WorkloadResult   6: 16777216 op, 575910598.35 ns, 34.3269 ns/op
WorkloadResult   7: 16777216 op, 576795251.22 ns, 34.3797 ns/op
WorkloadResult   8: 16777216 op, 576449443.13 ns, 34.3591 ns/op
WorkloadResult   9: 16777216 op, 572057364.67 ns, 34.0973 ns/op
WorkloadResult  10: 16777216 op, 579135377.15 ns, 34.5192 ns/op
WorkloadResult  11: 16777216 op, 581457344.22 ns, 34.6576 ns/op
WorkloadResult  12: 16777216 op, 577649507.72 ns, 34.4306 ns/op
WorkloadResult  13: 16777216 op, 572180529.19 ns, 34.1046 ns/op
WorkloadResult  14: 16777216 op, 575459784.61 ns, 34.3001 ns/op
WorkloadResult  15: 16777216 op, 576463654.43 ns, 34.3599 ns/op
GC:  319 0 0 671088640 16777216

// AfterAll

Mean = 34.3470 ns, StdErr = 0.0431 ns (0.13%); N = 15, StdDev = 0.1668 ns
Min = 34.0973 ns, Q1 = 34.2475 ns, Median = 34.3269 ns, Q3 = 34.4306 ns, Max = 34.6576 ns
IQR = 0.1831 ns, LowerFence = 33.9729 ns, UpperFence = 34.7052 ns
ConfidenceInterval = [34.1687 ns; 34.5253 ns] (CI 99.9%), Margin = 0.1783 ns (0.52% of Mean)
Skewness = 0.42, Kurtosis = 2.29, MValue = 2

Successfully reverted power plan (GUID: 381b4222-f694-41f0-9685-ff5bb260df2e FriendlyName: Balanced)
// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\Practise.Program-report.csv
  BenchmarkDotNet.Artifacts\results\Practise.Program-report-github.md
  BenchmarkDotNet.Artifacts\results\Practise.Program-report.html

// * Detailed results *
Program.RunningCodeUsingForLoop: DefaultJob
Runtime = ; GC = 
There are not any results runs

Program.RunningCodeUsingForEachLoop: DefaultJob
Runtime = .NET Core 2.1.12 (CoreCLR 4.6.27817.01, CoreFX 4.6.27818.01), 64bit RyuJIT; GC = Concurrent Workstation
Mean = 34.3470 ns, StdErr = 0.0431 ns (0.13%); N = 15, StdDev = 0.1668 ns
Min = 34.0973 ns, Q1 = 34.2475 ns, Median = 34.3269 ns, Q3 = 34.4306 ns, Max = 34.6576 ns
IQR = 0.1831 ns, LowerFence = 33.9729 ns, UpperFence = 34.7052 ns
ConfidenceInterval = [34.1687 ns; 34.5253 ns] (CI 99.9%), Margin = 0.1783 ns (0.52% of Mean)
Skewness = 0.42, Kurtosis = 2.29, MValue = 2
-------------------- Histogram --------------------
[34.038 ns ; 34.717 ns) | @@@@@@@@@@@@@@@
---------------------------------------------------

// * Summary *

BenchmarkDotNet=v0.11.5, OS=Windows 10.0.17134.829 (1803/April2018Update/Redstone4)
Intel Core i7-4510U CPU 2.00GHz (Haswell), 1 CPU, 4 logical and 2 physical cores
Frequency=2533197 Hz, Resolution=394.7581 ns, Timer=TSC
.NET Core SDK=2.1.701
  [Host]     : .NET Core 2.1.12 (CoreCLR 4.6.27817.01, CoreFX 4.6.27818.01), 64bit RyuJIT
  DefaultJob : .NET Core 2.1.12 (CoreCLR 4.6.27817.01, CoreFX 4.6.27818.01), 64bit RyuJIT


|                      Method |     Mean |     Error |    StdDev |  Gen 0 | Gen 1 | Gen 2 | Allocated |
|---------------------------- |---------:|----------:|----------:|-------:|------:|------:|----------:|
|     RunningCodeUsingForLoop |       NA |        NA |        NA |      - |     - |     - |         - |
| RunningCodeUsingForEachLoop | 34.35 ns | 0.1783 ns | 0.1668 ns | 0.0190 |     - |     - |      40 B |

Benchmarks with issues:
  Program.RunningCodeUsingForLoop: DefaultJob

// * Warnings *
Environment
  Summary -> Detected error exit code from one of the benchmarks. It might be caused by following antivirus software:
        - McAfee Endpoint Security (C:\Program Files (x86)\McAfee\Endpoint Security\Threat Prevention\AMCFG.EXE)
        - Windows Defender (windowsdefender://)
Use InProcessToolchain to avoid new process creation.


// * Legends *
  Mean      : Arithmetic mean of all measurements
  Error     : Half of 99.9% confidence interval
  StdDev    : Standard deviation of all measurements
  Gen 0     : GC Generation 0 collects per 1000 operations
  Gen 1     : GC Generation 1 collects per 1000 operations
  Gen 2     : GC Generation 2 collects per 1000 operations
  Allocated : Allocated memory per single operation (managed only, inclusive, 1KB = 1024B)
  1 ns      : 1 Nanosecond (0.000000001 sec)

// * Diagnostic Output - MemoryDiagnoser *


// ***** BenchmarkRunner: End *****
// ** Remained 0 benchmark(s) to run **
Run time: 00:00:19 (19.75 sec), executed benchmarks: 2

Global total time: 00:00:31 (31.41 sec), executed benchmarks: 2
// * Artifacts cleanup *
