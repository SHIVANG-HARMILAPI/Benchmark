// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 4 benchmark(s) in total *****
// ***** Building 2 exe(s) in Parallel: Start   *****
// ***** Done, took 00:00:12 (12.74 sec)   *****
// ***** Failed to build in Parallel, switching to sequential build..   *****
// ***** Done, took 00:00:15 (15.75 sec)   *****
// Found 4 benchmarks:
//   Program.RunningCodeUsingForLoop: Clr(Runtime=Clr)
//   Program.RunningCodeUsingForEachLoop: Clr(Runtime=Clr)
//   Program.RunningCodeUsingForLoop: Core(Runtime=Core)
//   Program.RunningCodeUsingForEachLoop: Core(Runtime=Core)

Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)// Build Error: Standard output: 
  
 Standard error: 
   Restore failed in 174.73 ms for C:\Users\shharmilapi\source\repos\Practise\Practise\bin\Release\netcoreapp2.1\85397c66-e469-4ef5-88f2-ba1565522fdb\BenchmarkDotNet.Autogenerated.csproj.
C:\Users\shharmilapi\source\repos\Practise\Practise\bin\Release\netcoreapp2.1\85397c66-e469-4ef5-88f2-ba1565522fdb\BenchmarkDotNet.Autogenerated.csproj : error NU1201: Project Practise is not compatible with net472 (.NETFramework,Version=v4.7.2) / win7-x64. Project Practise supports: netcoreapp2.1 (.NETCoreApp,Version=v2.1)
C:\Users\shharmilapi\source\repos\Practise\Practise\bin\Release\netcoreapp2.1\85397c66-e469-4ef5-88f2-ba1565522fdb\BenchmarkDotNet.Autogenerated.csproj : error NU1201: Project Practise is not compatible with net472 (.NETFramework,Version=v4.7.2). Project Practise supports: netcoreapp2.1 (.NETCoreApp,Version=v2.1)
  Restore completed in 77.06 ms for C:\Users\shharmilapi\source\repos\Practise\Practise\Practise.csproj.

// Build Error: Standard output: 
  
 Standard error: 
   Restore failed in 174.73 ms for C:\Users\shharmilapi\source\repos\Practise\Practise\bin\Release\netcoreapp2.1\85397c66-e469-4ef5-88f2-ba1565522fdb\BenchmarkDotNet.Autogenerated.csproj.
C:\Users\shharmilapi\source\repos\Practise\Practise\bin\Release\netcoreapp2.1\85397c66-e469-4ef5-88f2-ba1565522fdb\BenchmarkDotNet.Autogenerated.csproj : error NU1201: Project Practise is not compatible with net472 (.NETFramework,Version=v4.7.2) / win7-x64. Project Practise supports: netcoreapp2.1 (.NETCoreApp,Version=v2.1)
C:\Users\shharmilapi\source\repos\Practise\Practise\bin\Release\netcoreapp2.1\85397c66-e469-4ef5-88f2-ba1565522fdb\BenchmarkDotNet.Autogenerated.csproj : error NU1201: Project Practise is not compatible with net472 (.NETFramework,Version=v4.7.2). Project Practise supports: netcoreapp2.1 (.NETCoreApp,Version=v2.1)
  Restore completed in 77.06 ms for C:\Users\shharmilapi\source\repos\Practise\Practise\Practise.csproj.

// **************************
// Benchmark: Program.RunningCodeUsingForLoop: Core(Runtime=Core)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "635fe9a4-c244-4511-ba6c-83ea73bbc14b.dll" --benchmarkName "Practise.Program.RunningCodeUsingForLoop" --job "Core" --benchmarkId 0 in C:\Users\shharmilapi\source\repos\Practise\Practise\bin\Release\netcoreapp2.1\635fe9a4-c244-4511-ba6c-83ea73bbc14b\bin\Release\netcoreapp2.1
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.1.12 (CoreCLR 4.6.27817.01, CoreFX 4.6.27818.01), 64bit RyuJIT
// GC=Concurrent Workstation
// Job: Core(Runtime=Core)

OverheadJitting  1: 1 op, 552661.32 ns, 552.6613 us/op

System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index
   at Practise.Program.RunningCodeUsingForLoop() in C:\Users\shharmilapi\source\repos\Practise\Practise\Program.cs:line 37
   at BenchmarkDotNet.Autogenerated.Runnable_0.WorkloadActionNoUnroll(Int64 invokeCount) in C:\Users\shharmilapi\source\repos\Practise\Practise\bin\Release\netcoreapp2.1\635fe9a4-c244-4511-ba6c-83ea73bbc14b\635fe9a4-c244-4511-ba6c-83ea73bbc14b.notcs:line 748
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineFactory.Jit(Engine engine, Int32 jitIndex, Int32 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineFactory.CreateReadyToRun(EngineParameters engineParameters)
   at BenchmarkDotNet.Autogenerated.Runnable_0.Run(IHost host, String benchmarkName) in C:\Users\shharmilapi\source\repos\Practise\Practise\bin\Release\netcoreapp2.1\635fe9a4-c244-4511-ba6c-83ea73bbc14b\635fe9a4-c244-4511-ba6c-83ea73bbc14b.notcs:line 165
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in C:\Users\shharmilapi\source\repos\Practise\Practise\bin\Release\netcoreapp2.1\635fe9a4-c244-4511-ba6c-83ea73bbc14b\635fe9a4-c244-4511-ba6c-83ea73bbc14b.notcs:line 49
// AfterAll
ExitCode != 0
No more Benchmark runs will be launched as NO measurements were obtained from the previous run!


// **************************
// Benchmark: Program.RunningCodeUsingForEachLoop: Core(Runtime=Core)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "635fe9a4-c244-4511-ba6c-83ea73bbc14b.dll" --benchmarkName "Practise.Program.RunningCodeUsingForEachLoop" --job "Core" --benchmarkId 1 in C:\Users\shharmilapi\source\repos\Practise\Practise\bin\Release\netcoreapp2.1\635fe9a4-c244-4511-ba6c-83ea73bbc14b\bin\Release\netcoreapp2.1
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 2.1.12 (CoreCLR 4.6.27817.01, CoreFX 4.6.27818.01), 64bit RyuJIT
// GC=Concurrent Workstation
// Job: Core(Runtime=Core)

OverheadJitting  1: 1 op, 536871.00 ns, 536.8710 us/op
WorkloadJitting  1: 1 op, 738987.14 ns, 738.9871 us/op

OverheadJitting  2: 16 op, 436997.20 ns, 27.3123 us/op
WorkloadJitting  2: 16 op, 560161.72 ns, 35.0101 us/op

WorkloadPilot    1: 16 op, 5526.61 ns, 345.4133 ns/op
WorkloadPilot    2: 32 op, 4737.10 ns, 148.0343 ns/op
WorkloadPilot    3: 64 op, 6710.89 ns, 104.8576 ns/op
WorkloadPilot    4: 128 op, 8684.68 ns, 67.8490 ns/op
WorkloadPilot    5: 256 op, 16185.08 ns, 63.2230 ns/op
WorkloadPilot    6: 512 op, 39081.05 ns, 76.3302 ns/op
WorkloadPilot    7: 1024 op, 37896.78 ns, 37.0086 ns/op
WorkloadPilot    8: 2048 op, 92768.15 ns, 45.2969 ns/op
WorkloadPilot    9: 4096 op, 240012.92 ns, 58.5969 ns/op
WorkloadPilot   10: 8192 op, 395152.84 ns, 48.2364 ns/op
WorkloadPilot   11: 16384 op, 1097427.48 ns, 66.9817 ns/op
WorkloadPilot   12: 32768 op, 1672984.77 ns, 51.0554 ns/op
WorkloadPilot   13: 65536 op, 3340048.17 ns, 50.9651 ns/op
WorkloadPilot   14: 131072 op, 4959740.60 ns, 37.8398 ns/op
WorkloadPilot   15: 262144 op, 10545567.52 ns, 40.2281 ns/op
WorkloadPilot   16: 524288 op, 20739800.34 ns, 39.5580 ns/op
WorkloadPilot   17: 1048576 op, 41039840.17 ns, 39.1386 ns/op
WorkloadPilot   18: 2097152 op, 76932429.65 ns, 36.6842 ns/op
WorkloadPilot   19: 4194304 op, 153191796.77 ns, 36.5238 ns/op
WorkloadPilot   20: 8388608 op, 315935949.71 ns, 37.6625 ns/op
WorkloadPilot   21: 16777216 op, 610104149.03 ns, 36.3650 ns/op

OverheadWarmup   1: 16777216 op, 47659538.52 ns, 2.8407 ns/op
OverheadWarmup   2: 16777216 op, 47324388.90 ns, 2.8208 ns/op
OverheadWarmup   3: 16777216 op, 49079878.11 ns, 2.9254 ns/op
OverheadWarmup   4: 16777216 op, 47764544.17 ns, 2.8470 ns/op
OverheadWarmup   5: 16777216 op, 47981661.12 ns, 2.8599 ns/op
OverheadWarmup   6: 16777216 op, 47609799.00 ns, 2.8378 ns/op

OverheadActual   1: 16777216 op, 47889682.48 ns, 2.8544 ns/op
OverheadActual   2: 16777216 op, 47531636.90 ns, 2.8331 ns/op
OverheadActual   3: 16777216 op, 47383602.62 ns, 2.8243 ns/op
OverheadActual   4: 16777216 op, 47319257.05 ns, 2.8204 ns/op
OverheadActual   5: 16777216 op, 47253332.45 ns, 2.8165 ns/op
OverheadActual   6: 16777216 op, 47446763.91 ns, 2.8280 ns/op
OverheadActual   7: 16777216 op, 47749938.12 ns, 2.8461 ns/op
OverheadActual   8: 16777216 op, 47483081.66 ns, 2.8302 ns/op
OverheadActual   9: 16777216 op, 47907841.36 ns, 2.8555 ns/op
OverheadActual  10: 16777216 op, 47376102.21 ns, 2.8238 ns/op
OverheadActual  11: 16777216 op, 47744411.51 ns, 2.8458 ns/op
OverheadActual  12: 16777216 op, 47699014.33 ns, 2.8431 ns/op
OverheadActual  13: 16777216 op, 48887630.93 ns, 2.9139 ns/op
OverheadActual  14: 16777216 op, 47701777.64 ns, 2.8432 ns/op
OverheadActual  15: 16777216 op, 48965398.27 ns, 2.9186 ns/op

WorkloadWarmup   1: 16777216 op, 606711992.79 ns, 36.1629 ns/op
WorkloadWarmup   2: 16777216 op, 610015328.46 ns, 36.3597 ns/op
WorkloadWarmup   3: 16777216 op, 605497322.16 ns, 36.0905 ns/op
WorkloadWarmup   4: 16777216 op, 615772085.63 ns, 36.7029 ns/op
WorkloadWarmup   5: 16777216 op, 611397771.27 ns, 36.4421 ns/op
WorkloadWarmup   6: 16777216 op, 608118515.85 ns, 36.2467 ns/op

// BeforeActualRun
WorkloadActual   1: 16777216 op, 606835552.07 ns, 36.1702 ns/op
WorkloadActual   2: 16777216 op, 608078645.28 ns, 36.2443 ns/op
WorkloadActual   3: 16777216 op, 609239628.82 ns, 36.3135 ns/op
WorkloadActual   4: 16777216 op, 607132015.39 ns, 36.1879 ns/op
WorkloadActual   5: 16777216 op, 608695257.42 ns, 36.2811 ns/op
WorkloadActual   6: 16777216 op, 616355932.84 ns, 36.7377 ns/op
WorkloadActual   7: 16777216 op, 637762874.34 ns, 38.0136 ns/op
WorkloadActual   8: 16777216 op, 608308394.49 ns, 36.2580 ns/op
WorkloadActual   9: 16777216 op, 611103676.50 ns, 36.4246 ns/op
WorkloadActual  10: 16777216 op, 607694150.91 ns, 36.2214 ns/op
WorkloadActual  11: 16777216 op, 610587332.92 ns, 36.3938 ns/op
WorkloadActual  12: 16777216 op, 608939217.91 ns, 36.2956 ns/op
WorkloadActual  13: 16777216 op, 611949248.32 ns, 36.4750 ns/op
WorkloadActual  14: 16777216 op, 615999466.29 ns, 36.7164 ns/op
WorkloadActual  15: 16777216 op, 614913486.79 ns, 36.6517 ns/op

// AfterActualRun
WorkloadResult   1: 16777216 op, 559136537.74 ns, 33.3271 ns/op
WorkloadResult   2: 16777216 op, 560379630.96 ns, 33.4012 ns/op
WorkloadResult   3: 16777216 op, 561540614.49 ns, 33.4704 ns/op
WorkloadResult   4: 16777216 op, 559433001.07 ns, 33.3448 ns/op
WorkloadResult   5: 16777216 op, 560996243.09 ns, 33.4380 ns/op
WorkloadResult   6: 16777216 op, 568656918.51 ns, 33.8946 ns/op
WorkloadResult   7: 16777216 op, 560609380.16 ns, 33.4149 ns/op
WorkloadResult   8: 16777216 op, 563404662.17 ns, 33.5815 ns/op
WorkloadResult   9: 16777216 op, 559995136.58 ns, 33.3783 ns/op
WorkloadResult  10: 16777216 op, 562888318.60 ns, 33.5508 ns/op
WorkloadResult  11: 16777216 op, 561240203.58 ns, 33.4525 ns/op
WorkloadResult  12: 16777216 op, 564250233.99 ns, 33.6319 ns/op
WorkloadResult  13: 16777216 op, 568300451.96 ns, 33.8733 ns/op
WorkloadResult  14: 16777216 op, 567214472.46 ns, 33.8086 ns/op
GC:  319 0 0 671088640 16777216

// AfterAll

Mean = 33.5406 ns, StdErr = 0.0517 ns (0.15%); N = 14, StdDev = 0.1935 ns
Min = 33.3271 ns, Q1 = 33.4012 ns, Median = 33.4615 ns, Q3 = 33.6319 ns, Max = 33.8946 ns
IQR = 0.2307 ns, LowerFence = 33.0552 ns, UpperFence = 33.9780 ns
ConfidenceInterval = [33.3223 ns; 33.7588 ns] (CI 99.9%), Margin = 0.2183 ns (0.65% of Mean)
Skewness = 0.72, Kurtosis = 1.95, MValue = 2

Successfully reverted power plan (GUID: 381b4222-f694-41f0-9685-ff5bb260df2e FriendlyName: Balanced)
// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\Practise.Program-report.csv
  BenchmarkDotNet.Artifacts\results\Practise.Program-report-github.md
  BenchmarkDotNet.Artifacts\results\Practise.Program-report.html

// * Detailed results *
Program.RunningCodeUsingForLoop: Clr(Runtime=Clr)
Runtime = ; GC = 
There are not any results runs

Program.RunningCodeUsingForEachLoop: Clr(Runtime=Clr)
Runtime = ; GC = 
There are not any results runs

Program.RunningCodeUsingForLoop: Core(Runtime=Core)
Runtime = ; GC = 
There are not any results runs

Program.RunningCodeUsingForEachLoop: Core(Runtime=Core)
Runtime = .NET Core 2.1.12 (CoreCLR 4.6.27817.01, CoreFX 4.6.27818.01), 64bit RyuJIT; GC = Concurrent Workstation
Mean = 33.5406 ns, StdErr = 0.0517 ns (0.15%); N = 14, StdDev = 0.1935 ns
Min = 33.3271 ns, Q1 = 33.4012 ns, Median = 33.4615 ns, Q3 = 33.6319 ns, Max = 33.8946 ns
IQR = 0.2307 ns, LowerFence = 33.0552 ns, UpperFence = 33.9780 ns
ConfidenceInterval = [33.3223 ns; 33.7588 ns] (CI 99.9%), Margin = 0.2183 ns (0.65% of Mean)
Skewness = 0.72, Kurtosis = 1.95, MValue = 2
-------------------- Histogram --------------------
[33.257 ns ; 33.965 ns) | @@@@@@@@@@@@@@
---------------------------------------------------

// * Summary *

BenchmarkDotNet=v0.11.5, OS=Windows 10.0.17134.829 (1803/April2018Update/Redstone4)
Intel Core i7-4510U CPU 2.00GHz (Haswell), 1 CPU, 4 logical and 2 physical cores
Frequency=2533197 Hz, Resolution=394.7581 ns, Timer=TSC
.NET Core SDK=2.1.701
  [Host] : .NET Core 2.1.12 (CoreCLR 4.6.27817.01, CoreFX 4.6.27818.01), 64bit RyuJIT
  Core   : .NET Core 2.1.12 (CoreCLR 4.6.27817.01, CoreFX 4.6.27818.01), 64bit RyuJIT


|                      Method |  Job | Runtime |     Mean |     Error |    StdDev |  Gen 0 | Gen 1 | Gen 2 | Allocated |
|---------------------------- |----- |-------- |---------:|----------:|----------:|-------:|------:|------:|----------:|
|     RunningCodeUsingForLoop |  Clr |     Clr |       NA |        NA |        NA |      - |     - |     - |         - |
| RunningCodeUsingForEachLoop |  Clr |     Clr |       NA |        NA |        NA |      - |     - |     - |         - |
|     RunningCodeUsingForLoop | Core |    Core |       NA |        NA |        NA |      - |     - |     - |         - |
| RunningCodeUsingForEachLoop | Core |    Core | 33.54 ns | 0.2183 ns | 0.1935 ns | 0.0190 |     - |     - |      40 B |

Benchmarks with issues:
  Program.RunningCodeUsingForLoop: Clr(Runtime=Clr)
  Program.RunningCodeUsingForEachLoop: Clr(Runtime=Clr)
  Program.RunningCodeUsingForLoop: Core(Runtime=Core)

// * Warnings *
Environment
  Summary -> Detected error exit code from one of the benchmarks. It might be caused by following antivirus software:
        - McAfee Endpoint Security (C:\Program Files (x86)\McAfee\Endpoint Security\Threat Prevention\AMCFG.EXE)
        - Windows Defender (windowsdefender://)
Use InProcessToolchain to avoid new process creation.


// * Hints *
Outliers
  Program.RunningCodeUsingForEachLoop: Core -> 1 outlier  was  removed (38.01 ns)

// * Legends *
  Mean      : Arithmetic mean of all measurements
  Error     : Half of 99.9% confidence interval
  StdDev    : Standard deviation of all measurements
  Gen 0     : GC Generation 0 collects per 1000 operations
  Gen 1     : GC Generation 1 collects per 1000 operations
  Gen 2     : GC Generation 2 collects per 1000 operations
  Allocated : Allocated memory per single operation (managed only, inclusive, 1KB = 1024B)
  1 ns      : 1 Nanosecond (0.000000001 sec)

// * Diagnostic Output - MemoryDiagnoser *


// ***** BenchmarkRunner: End *****
// ** Remained 0 benchmark(s) to run **
Run time: 00:00:18 (18.62 sec), executed benchmarks: 2

Global total time: 00:00:34 (34.39 sec), executed benchmarks: 2
// * Artifacts cleanup *
